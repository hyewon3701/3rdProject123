<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">
<!-- User -->
	<select id="getUser" parameterType="String" resultType="db.UserDataBean">
		select * from pao_user where user_id=#{user_id}
	</select>
	<select id="getUserId" parameterType="String" resultType="String">
		select user_id from pao_user where user_name=#{user_name}
	</select>
	<select id="getUserEmailId" parameterType="String" resultType="db.UserDataBean">
		select user_id from pao_user where email=#{email}
	</select>

	<select id="getUserEmailPasswd" parameterType="String" resultType="db.UserDataBean">
		select passwd from pao_user where email=#{email}
	</select>

	<select id="getUserLevel" parameterType="String" resultType="Integer">
		select user_level from pao_user where user_id=#{user_id}
	</select>
<!-- TODO: boardDB.xml 에서 옮겨옴
	<select id="getUserName" parameterType="String" resultType="String">
		select user_name from pao_user where user_id=#{user_id}
	</select>
	<select id="getUserId" parameterType="String" resultType="String">
		select user_id from pao_user where user_name=#{user_name}
	</select>
	<select id="isMember" parameterType="db.boardDataBean" resultType="int">
		select count(*) from pao_member where user_id=#{user_id} and trip_id in(
			select trip_id from pao_trip where board_no=#{board_no})
	</select>
	<select id="getMember" parameterType="int" resultType="java.util.List">
		select user_id from pao_members where trip_id=(select trip_id from pao_trip where board_no=#{board_no})
	</select>
	<select id="isTBMember" parameterType="db.BoardDataBean" resultType="int">
		select count(*) from pao_members where user_id=#{user_id} and
		trip_id in(
		select trip_id from pao_trip where
		board_no=#{board_no})
	</select>
-->
<!-- Member -->
	<select id="getMemTripId" parameterType="String" resultType="int">
		select trip_id from pao_members where user_id=#{user_id}
	</select>
	<select id="getMemberList" parameterType="String" resultType="db.MemberDataBean">
		select * from pao_members where user_id=#{user_id}
	</select>
	<select id="getUserName" parameterType="String" resultType="String">
		select user_name from pao_user where user_id=#{user_id}
	</select>
	<select id="getCurrentMember" parameterType="int" resultType="db.MemberDataBean">
		select * from pao_members where trip_id=#{trip_id}
	</select>
	<update id="addTripMember" parameterType="db.MemberDataBean">
		insert into pao_members(user_id, trip_id) values(#{user_id}, #{trip_id})
	</update>
	<delete id="delTripMember" parameterType="db.MemberDataBean">
		delete from pao_members where user_id=#{user_id} and trip_id=#{trip_id}
	</delete>
	<select id="isTripMember" parameterType="db.MemberDataBean" resultType="int">
		select count(*) from pao_members where user_id=#{user_id} and trip_id=#{trip_id}
	</select>
	<select id="getMemberCount" parameterType="int" resultType="int">
		select count(*) from pao_members where trip_id=#{trip_id}
	</select>
	<select id="getMembers" parameterType="int" resultType="db.MemberDataBean">
		select *
		from pao_view_members
		where trip_id=#{trip_id}
	</select>
	<select id="getOneMember" parameterType="String" resultType="db.MemberDataBean">
		select *
		from pao_view_members
		where user_id=#{user_id}
	</select>
	<!--  임시 -->
	<select id="getMem" resultType="db.MemberDataBean">
		select * from pao_members
	</select>
<!-- Tag -->
	<select id="getUserTags" parameterType="String" resultType="java.util.List">
		select tag_value from pao_tag where tag_id in
		(select tag_id from pao_user_tag where user_id=#{user_id})
	</select>

	<delete id="deleteUser" parameterType="String">
	 	delete from pao_user where user_id=#{user_id}
	 </delete>

	 <select id="getUsers" parameterType="java.util.Map" resultType="db.UserDataBean">
		SELECT user_id, user_name, email, reg_date, gender, user_level, user_age, r
		FROM (
			SELECT user_id, user_name, email, reg_date, gender, user_level, user_age, rownum r
			FROM (
				SELECT user_id, user_name, email, reg_date, gender, user_level, user_age
				FROM pao_user
				WHERE user_level != 9
				ORDER BY reg_date DESC
				)
			ORDER BY reg_date DESC
			)
		WHERE r &gt;= #{start} AND r &lt;=#{end}
	</select>

	<!-- 총 유저 숫자를 세는거 같은데 어디다 쓰는 용도인지 모르겠네 -->
	<!-- Re : admin에서 user list 게시판을 부르기 위해 총 인원수를 세는 용도였음, AdmListHandler.java 의 adminUserHandler() -->
	<select id="getAllUserCount" resultType="int">
		select count(*) from pao_user where user_level!=9
	</select>



	<insert id="insertUser" parameterType="db.UserDataBean">
		insert into pao_user
		values(#{user_id}, #{passwd}, #{user_name}, #{email, jdbcType=VARCHAR},#{reg_date}, #{gender},
		 1,25 ) <!-- 나이임시처리, jsp에 나이 추가 필 요-->
	</insert>

	<select id="checkId" parameterType="String" resultType="int">
		SELECT COUNT(*) 
		FROM pao_user 
		WHERE user_id=#{user_id}
	</select>

	<select id="emailCheck" parameterType="String" resultType="int">
		select
		count(*) from pao_user where email=#{email}
	</select>
	
	<update id="modifyUser" parameterType="db.UserDataBean">
		update pao_user set
		passwd=#{passwd}, user_name=#{user_name} where
		user_id=#{user_id}
	</update>
	<select id="nameCheck" parameterType="String" resultType="int">
		select count(*) from pao_user where user_name=#{user_name}
	</select>
<!-- Trip -->
	<select id="getUserTripList" parameterType="String" resultType="db.TripDataBean">
		select *
		from pao_view_trip
		where trip_id in (
				select trip_id
				from pao_members
				where user_id=#{user_id}
			)
		order by end_date desc
	</select>
	<select id="getReviewList" parameterType="String" resultType="db.TripDataBean">
		select *
		from pao_view_trip
		where trip_id in (
				select trip_id
				from pao_members
				where user_id=#{user_id}
			)
		and trip_id not in (
				select trip_id 
				from pao_trip 
				where coord_id in (
							select coord_id 
							from pao_coord_review
							where user_id=#{user_id}))
		order by end_date desc
	</select>
	<select id="getMemberNames" parameterType="int" resultType="java.util.List">
		select user_name
		from pao_view_trip
		where trip_id=#{trip_id}
	</select>
<!-- evaluation -->
	<select id="beforeReview" parameterType="java.util.Map" resultType="int">
		select count(*) from pao_user_review where reviewer_id=#{user_id} 
	</select>
	<select id="stepOne" parameterType="java.util.Map" resultType="db.ReviewDataBean">
		select * from pao_user_review where reviewer_id=#{user_id}
	</select>
	<select id="stepTwo" parameterType="java.util.Map" resultType="db.ReviewDataBean">
		select * from pao_user_review where reviewer_id=#{reviewer_id} and user_id=#{user_id}
		and trip_id=#{trip_id}
	</select>
	<select id="getReviewFin" parameterType="java.util.Map" resultType="db.ReviewDataBean">
		select *
			FROM (
				SELECT user_id, reviewer_id, review_point, review_comment, user_review_reg_date
				FROM pao_user_review
				WHERE user_id=#{user_id} and trip_id=#{trip_id} and reviewer_id=#{reviewer_id}
				ORDER BY review_point desc
				) as c
			ORDER BY user_review_reg_date DESC
		limit #{start},#{end}
	</select>
	<select id="getReviewCount" parameterType="java.util.Map" resultType="int">
		select count(*) from pao_user_review where user_id=#{user_id} and
		reviewer_id in (select user_id from pao_user_review where reviewer_id=#{user_id})
	</select>
	<select id="getReviewSum" parameterType="java.util.Map" resultType="int">
		select review_point from pao_user_review where user_id=#{user_id} and
		reviewer_id in (select user_id from pao_user_review where reviewer_id=#{user_id})
	</select>
	<select id="getEvaluation" parameterType="java.util.Map" resultType="db.ReviewDataBean">
		select * from pao_user_review where user_id=#{user_id}
	</select>
	<select id="getEvalFin" parameterType="java.util.Map" resultType="db.ReviewDataBean">
		select * from pao_user_review
		WHERE user_id=#{user_id}
		order by review_point desc, user_review_reg_date desc
		limit #{start},#{end}
	</select>
	<insert id="insertEvaluation" parameterType="db.ReviewDataBean">
		insert into pao_user_review(user_id, reviewer_id, trip_id, review_point, review_comment)
		 values(#{user_id}, #{reviewer_id}, #{trip_id}, #{review_point}, #{review_comment})
	</insert>
	<select id="countEvaluation" parameterType="java.util.Map" resultType="int">
		select count(*) from pao_user_review where user_id=#{user_id}
	</select>
	<select id="sumEvaluation" parameterType="String" resultType="int">
		select review_point from pao_user_review where user_id=#{user_id}
	</select>
	<select id="getReviewMembers" parameterType="int" resultType="db.MemberDataBean">
		select * from pao_members where trip_id=#{trip_id} and user_id not in 
		(select user_id from pao_user_review where trip_id=#{trip_id})
	</select>	
	<select id="getReviewMembers2" parameterType="java.util.Map" resultType="db.MemberDataBean">
		select * from pao_members where trip_id=#{trip_id} and user_id not in 
		(select user_id from pao_user_review where user_id=#{user_id} or trip_id=#{trip_id})
	</select>	
	<select id="getReview" parameterType="java.util.Map" resultType="db.MemberDataBean">
		select * from pao_members where trip_id = #{trip_id}
		and user_id not in 
		(select user_id from pao_user_review where trip_id = #{trip_id})
		except
		select * from pao_members where trip_id = #{trip_id}
		and user_id=#{user_id}
	</select>
	<select id="getBest" parameterType="java.util.Map" resultType="db.ReviewDataBean">
		select * from pao_user_review where user_id=#{user_id}
		order by review_point desc
		limit 1
	</select>
	<select id="getRecent" parameterType="java.util.Map" resultType="db.ReviewDataBean">
		select * from pao_user_review where user_id=#{user_id}
		order by user_review_reg_date desc
		limit 5
	</select>
	<select id="getWorst" parameterType="java.util.Map" resultType="db.ReviewDataBean">
		select * from pao_user_review where user_id=#{user_id}
		order by review_point asc
		limit 1
	</select>
</mapper>

